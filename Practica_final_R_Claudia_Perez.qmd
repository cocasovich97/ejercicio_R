---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))
```

#### PREGUNTA 1 (0.5pt)

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}
paste("Número de filas:", nrow(df_seeds)) # número de filas
paste("Número de columnas:", ncol(df_seeds)) # número de columnas
```

#### PREGUNTA 2 (0.5pt)

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

```{r}
df_seeds$tipo <- factor(df_seeds$tipo, labels = c("Kama", "Rosa", "Canadian"))

```

#### PREGUNTA 3 (1pt)

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
summary_area <- summarize(group_by(df_seeds, tipo), media_area = mean(area))
summary_area #resultado
```

#### PREGUNTA 4 (0.5pt)

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot() + theme_bw()
```

**Respuesta**: El siguiente gráfico es de tipo boxplot, la línea del centro de la caja representa la mediana de los datos

#### PREGUNTA 5 (1.5pt)

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X la variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
ggplot(df_seeds, aes(x = compacto, y = area, color = tipo)) + geom_point() + theme_bw()
```

#### PREGUNTA 6 (0.5pt)

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds
```

**Respuesta**: Añade una columna booleana llamada "is_kama" al dataframe "df_seeds" que tiene valor TRUE si el tipo es 'Kama', y FALSE si no lo es

#### PREGUNTA 7 (1.5pt)

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]
```

**Respuesta**: Es aconsejable dividir el dataset en los grupos de train y test para entrenar (train) el modelo y el otro para comprobar (test) después. De esta manera dividimos en dos grupos los datos originales para evitar la sobrecarga de los modelos de predicción.

#### PREGUNTA 8 (1pt)

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar? Para crear un modelo de clasificación binaria con las características proporcionadas, como area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura, se puede usar un algoritmo como la Regresión Logística

**Respuesta**:

#### PREGUNTA 9 (1pt)

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}
df_train <- df_seeds_train |> 
select(area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura, tipo)
model <- glm(tipo == 'Kama' ~ ., data = df_train, family = binomial)

summary(model)
```

#### PREGUNTA 10 (1pt)

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad?

**Respuesta**.

```{r}
predictions <- predict(model, newdata = df_seeds_test, type = 'response')
predicted_labels <- ifelse(predictions >= 0.5, 'Kama', 'Otro')

conf_matrix <- table(Real = df_seeds_test$tipo, Predicho = predicted_labels)

precision <- sum(diag(conf_matrix)) / sum(conf_matrix)
paste("Precisión:", precision)

recall <- diag(conf_matrix) / colSums(conf_matrix)
paste("Exhaustividad:", recall)
```

#### PREGUNTA 11 (1.5pt)

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**: Se está realizando un análisis de un clustering k-means en las características seleccionadas (area, peirmetro, compacto, longitud, coeficient.asimetria,longitud.ranura) y luego muestra la distribución de cada tipo de semillas en cada cluster
